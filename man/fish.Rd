% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fish.R
\name{fish}
\alias{fish}
\title{Grab multiple elements (including nested element) from a list}
\usage{
fish(data, items, .default = NULL, missing.rm = FALSE)
}
\arguments{
\item{data}{A vector or environment}

\item{items}{A list of lists of accessors for indexing into the object.
Each accessors is used with \code{pluck()} so they need to be written
accordingly}

\item{.default}{Value to use if target is empty or absent.}

\item{missing.rm}{Can be turned to TRUE to remove unfound keys}
}
\description{
\code{fish()} allow you to index deeply and flexibly into data structures.
\code{fish()} consistently returns \code{NULL} when an element does not
exist.
}
\examples{
# Let's create some data structures:
obj1 <- list("a", list(1, elt = "foo"), pear="william", 56, "hello")
obj2 <- list("b", list(2, elt = "bar"), pear="sage", 34, "hola")


# fish() provides a way of retrieving multiple objects from such data
# structures by defining a list that contains all the needed accessors
items_to_get <- list(
  list(2, "elt"),
  list("pear"),
  list(5)
)

fish(obj1, items_to_get)

#' #' # Let's create a list of data structures:
x <- list(obj1, obj2)

# fish() can be used with map() to get the desired keys in each item
# of a list of lists

map(x, fish, items_to_get)

# optionally, you can use fish to rename the elements by adding new names
# to your items_to_get
named_items_to_get <- list(
  list(2, "elt"),
  fruit=list("pear"),
  month=list(5)
)
map(x, fish, named_items_to_get)

}
